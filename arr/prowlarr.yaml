apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prowlarr-config-rwx-pvc
  namespace: arr
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: longhorn

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prowlarr
  namespace: arr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prowlarr
  template:
    metadata:
      labels:
        app: prowlarr
    spec:
      containers:
      - name: prowlarr
        image: linuxserver/prowlarr:1.37.0
        imagePullPolicy: Always
        ports:
        - containerPort: 9696
        env:
        - name: PUID
          value: "1002"
        - name: PGID
          value: "1002"
        - name: TZ
          value: "America/New_York"
        volumeMounts:
        - name: config
          mountPath: /config
        - name: downloads
          mountPath: /downloads
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: prowlarr-config-rwx-pvc
      - name: downloads
        persistentVolumeClaim:
          claimName: porygon-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: prowlarr
  namespace: arr
spec:
  selector:
    app: prowlarr
  ports:
  - name: http
    port: 80
    targetPort: 9696

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prowlarr
  namespace: arr
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
spec:
  tls:
  - hosts:
      - prowlarr.pokedex.lan
    secretName: prowlarr-tls
  rules:
  - host: prowlarr.pokedex.lan
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prowlarr
            port:
              number: 80
